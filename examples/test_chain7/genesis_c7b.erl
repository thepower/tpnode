-module(genesis_c7b).
-compile([nowarn_export_all, export_all]).

local_chain() -> 7.
local_group() -> 1024.
prefix() -> "examples/test_chain7/".

chainstate() ->
  naddress:construct_public(local_group(),local_chain(),1).
chainfee() ->
  naddress:construct_private(local_group(), 1).
minter() ->
  naddress:construct_private(local_group(), 2).
admin() ->
  naddress:construct_private(local_group(), 3).

node_priv_file(KeyName) ->
  File=prefix()++KeyName,
  {ok, L} = file:consult(File),
  {privkey, K} = lists:keyfind(privkey, 1, L),
  hex:decode(K).

node_privs() ->
  lists:map(fun node_priv_file/1,
            wildcard("c7n?.conf","")
           ).

node_keys() ->
  lists:map(fun tpecdsa:calc_pub/1,
            node_privs()
           ).

code(Name) ->
  genesis2:read_contract("examples/evm_builtin/build/"++Name).

pre_tx() ->
  [
   {<<0>>, code, [], code("ChainSettings.bin-runtime")},
   {chainstate(), code, [], code("ChainState.bin-runtime")},
   {chainfee(), code, [], code("ChainFee.bin-runtime")},
   {chainfee(), storage, <<0>>, chainstate()},

   {<<0>>, pubkey, [], pub_example("chainsettings1")},
   {chainstate(), pubkey, [], pub_example("chainstate1")},
   {chainfee(), pubkey, [], pub_example("chainfee1")},
   {minter(), pubkey, [], pub_example("minter1")},

   {admin(), balance, <<"SK">>, 100000_000000000_000000000}, %100000 SK
   {admin(), pubkey, [], pub_example("admin1")},

   {hex:decode("0x4e59b44847b379578588920ca78fbf26c0b4956c"), code, [],
    code_create2() },
   {hex:decode("0xCA11bde05977b3631167028862bE2a173976CA11"), code, [],
    code_multicall()},
   {hex:decode("0x0000086e1910D5977302116fC27934DC0254266C"), code, [],
    code_immutable_deployment_factory()}
  ].

make_txs() ->
  lists:flatten(
  [
   {
    #{
      ver=>2,
      kind=>lstore,
      from=><<0>>,
      patches=>[
                #{<<"t">>=><<"set">>, <<"p">>=>[<<"configured">>], <<"v">>=>1}
                | settings:get_patches(settings())
               ]
     }, 1000},
   {
   tx:construct_tx(#{
                     kind => generic,
                     t => os:system_time(millisecond),
                     seq => 1,
                     from => chainstate(),
                     to => chainstate(),
                     ver => 2,
                     payload => [],
                     call => #{
                               function=>"allow_self_registration(bool)",
                               args=>[1]
                              }
                    }), 100000},
   {
    tx:construct_tx(#{
                      kind => generic,
                      t => os:system_time(millisecond),
                      seq => 1,
                      from => chainstate(),
                      to => chainstate(),
                      ver => 2,
                      payload => [],
                      call => #{
                                function=>"set_chainfee(address)",
                                args=>[chainfee()]
                               }
                     }), 100000}
   | [
      [
       {
       tx:construct_tx(#{
                         kind => generic,
                         t => 0,
                         seq => 0,
                         from => chainstate(),
                         to => chainstate(),
                         ver => 2,
                         payload => [],
                         call => #{
                                   function=>"register(bytes)",
                                   args=>[Node]
                                  }
                        }), 100000,
       fun(1,<<Id:256/big>>,_) ->
           true=(Id>0)
       end},
      {
       tx:construct_tx(#{
                         kind => generic,
                         t => 0,
                         seq => 0,
                         from => chainstate(),
                         to => chainstate(),
                         ver => 2,
                         payload => [],
                         call => #{
                                   function=>"set_nodekind(bytes,uint8)",
                                   args=>[Node,3]
                                  }
                        }), 100000
      }] || Node <- node_keys() ]
  ]).

post_tx() ->
  [
   {<<1,2,3,4,5,6,7,8>>, balance, <<"SK">>, 100500}
  ].


settings() ->
  #{
    <<"tag">> => <<"test_chain7">>,
    <<"blocktime">> => 3,
    <<"allocblock">> => #{
                          <<"block">> => local_chain(),
                          <<"group">> => local_group(),
                          <<"last">> => 16
                         },
    <<"fee">> => #{
                   <<"SK">> => #{ <<"base">> => 10000000,
                                  <<"baseextra">> => 80,
                                  <<"kb">> => 100000000
                                },
                   <<"params">> => #{ <<"feeaddr">> => chainfee() }
                  },
    <<"freegas2">> => #{ chainstate() => 5_000_000 },
    <<"autorun">> => #{ <<"afterBlock">> => chainstate() },
    <<"gas">> => #{
                   <<"SK">> => #{
                                 <<"gas">> => 1,
                                 <<"tokens">> => 1000
                                }
                  },
    <<"chainstate">> => chainstate(),
    <<"minter">> => #{ minter() => #{ <<"SK">> => 1 } }
   }.

key_absend(KeyName, Filename) ->
%  throw({error,
%             list_to_binary(
%               io_lib:format("No key found for ~s",[KeyName])
%              )}).
%
  io:format("No key found for ~s, creating new ed25519~n",[KeyName]),
  Priv=tpecdsa:generate_priv(ed25519),
  ok=file:write_file(Filename,hex:encodex(Priv)),
  Priv.

priv_file(KeyName) ->
  genesis2:priv_file(?MODULE, KeyName).

pub_file(KeyName) ->
  genesis2:pub_file(?MODULE, KeyName).
 
priv_example(ToHash) ->
  ASN1=hex:decode("302E020100300506032B657004220420"), %ed25519 keys
  Digest=crypto:hash(sha256,ToHash),
  <<ASN1/binary,Digest/binary>>.

pub_example(ToHash) ->
  ASN1=hex:decode("302E020100300506032B657004220420"), %ed25519 keys
  Digest=crypto:hash(sha256,ToHash),
  tpecdsa:calc_pub(<<ASN1/binary,Digest/binary>>).

wildcard(Pattern, Ext) ->
  genesis2:wildcard(?MODULE, Pattern, Ext).
 
code_create2() ->
    hex:decode("0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe03601600081602082378035828234f58015156039578182fd5b8082525050506014600cf3").

code_multicall() ->
  hex:decode("0x6080604052600436106100f35760003560e01c80634d2301cc1161008a578063a8b0574e11610059578063a8b0574e1461025a578063bce38bd714610275578063c3077fa914610288578063ee82ac5e1461029b57600080fd5b80634d2301cc146101ec57806372425d9d1461022157806382ad56cb1461023457806386d516e81461024757600080fd5b80633408e470116100c65780633408e47014610191578063399542e9146101a45780633e64a696146101c657806342cbb15c146101d957600080fd5b80630f28c97d146100f8578063174dea711461011a578063252dba421461013a57806327e86d6e1461015b575b600080fd5b34801561010457600080fd5b50425b6040519081526020015b60405180910390f35b61012d610128366004610a85565b6102ba565b6040516101119190610bbe565b61014d610148366004610a85565b6104ef565b604051610111929190610bd8565b34801561016757600080fd5b50437fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0140610107565b34801561019d57600080fd5b5046610107565b6101b76101b2366004610c60565b610690565b60405161011193929190610cba565b3480156101d257600080fd5b5048610107565b3480156101e557600080fd5b5043610107565b3480156101f857600080fd5b50610107610207366004610ce2565b73ffffffffffffffffffffffffffffffffffffffff163190565b34801561022d57600080fd5b5044610107565b61012d610242366004610a85565b6106ab565b34801561025357600080fd5b5045610107565b34801561026657600080fd5b50604051418152602001610111565b61012d610283366004610c60565b61085a565b6101b7610296366004610a85565b610a1a565b3480156102a757600080fd5b506101076102b6366004610d18565b4090565b60606000828067ffffffffffffffff8111156102d8576102d8610d31565b60405190808252806020026020018201604052801561031e57816020015b6040805180820190915260008152606060208201528152602001906001900390816102f65790505b5092503660005b8281101561047757600085828151811061034157610341610d60565b6020026020010151905087878381811061035d5761035d610d60565b905060200281019061036f9190610d8f565b6040810135958601959093506103886020850185610ce2565b73ffffffffffffffffffffffffffffffffffffffff16816103ac6060870187610dcd565b6040516103ba929190610e32565b60006040518083038185875af1925050503d80600081146103f7576040519150601f19603f3d011682016040523d82523d6000602084013e6103fc565b606091505b50602080850191909152901515808452908501351761046d577f08c379a000000000000000000000000000000000000000000000000000000000600052602060045260176024527f4d756c746963616c6c333a2063616c6c206661696c656400000000000000000060445260846000fd5b5050600101610325565b508234146104e6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601a60248201527f4d756c746963616c6c333a2076616c7565206d69736d6174636800000000000060448201526064015b60405180910390fd5b50505092915050565b436060828067ffffffffffffffff81111561050c5761050c610d31565b60405190808252806020026020018201604052801561053f57816020015b606081526020019060019003908161052a5790505b5091503660005b8281101561068657600087878381811061056257610562610d60565b90506020028101906105749190610e42565b92506105836020840184610ce2565b73ffffffffffffffffffffffffffffffffffffffff166105a66020850185610dcd565b6040516105b4929190610e32565b6000604051808303816000865af19150503d80600081146105f1576040519150601f19603f3d011682016040523d82523d6000602084013e6105f6565b606091505b5086848151811061060957610609610d60565b602090810291909101015290508061067d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601760248201527f4d756c746963616c6c333a2063616c6c206661696c656400000000000000000060448201526064016104dd565b50600101610546565b5050509250929050565b43804060606106a086868661085a565b905093509350939050565b6060818067ffffffffffffffff8111156106c7576106c7610d31565b60405190808252806020026020018201604052801561070d57816020015b6040805180820190915260008152606060208201528152602001906001900390816106e55790505b5091503660005b828110156104e657600084828151811061073057610730610d60565b6020026020010151905086868381811061074c5761074c610d60565b905060200281019061075e9190610e76565b925061076d6020840184610ce2565b73ffffffffffffffffffffffffffffffffffffffff166107906040850185610dcd565b60405161079e929190610e32565b6000604051808303816000865af19150503d80600081146107db576040519150601f19603f3d011682016040523d82523d6000602084013e6107e0565b606091505b506020808401919091529015158083529084013517610851577f08c379a000000000000000000000000000000000000000000000000000000000600052602060045260176024527f4d756c746963616c6c333a2063616c6c206661696c656400000000000000000060445260646000fd5b50600101610714565b6060818067ffffffffffffffff81111561087657610876610d31565b6040519080825280602002602001820160405280156108bc57816020015b6040805180820190915260008152606060208201528152602001906001900390816108945790505b5091503660005b82811015610a105760008482815181106108df576108df610d60565b602002602001015190508686838181106108fb576108fb610d60565b905060200281019061090d9190610e42565b925061091c6020840184610ce2565b73ffffffffffffffffffffffffffffffffffffffff1661093f6020850185610dcd565b60405161094d929190610e32565b6000604051808303816000865af19150503d806000811461098a576040519150601f19603f3d011682016040523d82523d6000602084013e61098f565b606091505b506020830152151581528715610a07578051610a07576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601760248201527f4d756c746963616c6c333a2063616c6c206661696c656400000000000000000060448201526064016104dd565b506001016108c3565b5050509392505050565b6000806060610a2b60018686610690565b919790965090945092505050565b60008083601f840112610a4b57600080fd5b50813567ffffffffffffffff811115610a6357600080fd5b6020830191508360208260051b8501011115610a7e57600080fd5b9250929050565b60008060208385031215610a9857600080fd5b823567ffffffffffffffff811115610aaf57600080fd5b610abb85828601610a39565b90969095509350505050565b6000815180845260005b81811015610aed57602081850181015186830182015201610ad1565b81811115610aff576000602083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b600082825180855260208086019550808260051b84010181860160005b84811015610bb1578583037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe001895281518051151584528401516040858501819052610b9d81860183610ac7565b9a86019a9450505090830190600101610b4f565b5090979650505050505050565b602081526000610bd16020830184610b32565b9392505050565b600060408201848352602060408185015281855180845260608601915060608160051b870101935082870160005b82811015610c52577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa0888703018452610c40868351610ac7565b95509284019290840190600101610c06565b509398975050505050505050565b600080600060408486031215610c7557600080fd5b83358015158114610c8557600080fd5b9250602084013567ffffffffffffffff811115610ca157600080fd5b610cad86828701610a39565b9497909650939450505050565b838152826020820152606060408201526000610cd96060830184610b32565b95945050505050565b600060208284031215610cf457600080fd5b813573ffffffffffffffffffffffffffffffffffffffff81168114610bd157600080fd5b600060208284031215610d2a57600080fd5b5035919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600082357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81833603018112610dc357600080fd5b9190910192915050565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1843603018112610e0257600080fd5b83018035915067ffffffffffffffff821115610e1d57600080fd5b602001915036819003821315610a7e57600080fd5b8183823760009101908152919050565b600082357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc1833603018112610dc357600080fd5b600082357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa1833603018112610dc357600080fdfea2646970667358221220bb2b5c71a328032f97c676ae39a1ec2148d3e5d6f73d95e9b17910152d61f16264736f6c634300080c0033").

code_immutable_deployment_factory() ->
hex:decode("0x6080604052600436106100655760003560e01c806385bb39231161004357806385bb3923146100da57806385cf97ab1461011a578063a49a7c901461013a57600080fd5b80632792502f1461006a5780635d652e98146100b457806364e03087146100c7575b600080fd5b34801561007657600080fd5b5061008a61008536600461090e565b61015a565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b61008a6100c2366004610927565b6101a3565b61008a6100d5366004610927565b610380565b3480156100e657600080fd5b5061010a6100f53660046109a3565b60006020819052908152604090205460ff1681565b60405190151581526020016100ab565b34801561012657600080fd5b5061008a610135366004610927565b610620565b34801561014657600080fd5b5061008a6101553660046109d9565b610675565b60006101658261072d565b73ffffffffffffffffffffffffffffffffffffffff811660009081526020819052604090205490915060ff161561019e57506000919050565b919050565b600083606081901c33148015906101db57507fffffffffffffffffffffffffffffffffffffffff000000000000000000000000811615155b15610212576040517f81e69d9b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600061021d8661072d565b73ffffffffffffffffffffffffffffffffffffffff811660009081526020819052604090205490915060ff1615610280576040517fa6ef0ba100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6102c28686868080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250349250610894915050565b92508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614610329576040517f3011642500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b505073ffffffffffffffffffffffffffffffffffffffff8116600090815260208190526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001660011790559392505050565b600083606081901c33148015906103b857507fffffffffffffffffffffffffffffffffffffffff000000000000000000000000811615155b156103ef576040517f81e69d9b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600084848080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920182905250604051949550936104f193508a9250610441915085906020016109fb565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe081840301815282825280516020918201207fff00000000000000000000000000000000000000000000000000000000000000848301527fffffffffffffffffffffffffffffffffffffffff0000000000000000000000003060601b16602185015260358401949094526055808401949094528151808403909401845260759092019052815191012090565b73ffffffffffffffffffffffffffffffffffffffff811660009081526020819052604090205490915060ff1615610554576040517fa6ef0ba100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b81602001825188818334f5955050508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16146105c8576040517f3011642500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50505073ffffffffffffffffffffffffffffffffffffffff8116600090815260208190526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001660011790559392505050565b6000610639848484604051602001610441929190610a2a565b73ffffffffffffffffffffffffffffffffffffffff811660009081526020819052604090205490915060ff161561066e575060005b9392505050565b604080517fff000000000000000000000000000000000000000000000000000000000000006020808301919091523060601b7fffffffffffffffffffffffffffffffffffffffff000000000000000000000000166021830152603582018590526055808301859052835180840390910181526075909201835281519181019190912073ffffffffffffffffffffffffffffffffffffffff81166000908152918290529190205460ff1615610727575060005b92915050565b6000806107d6837f21c35dbe1b344a2488cf3321d6ce542f8e9f305544ff09e4993a62319a497c1f604080517fff000000000000000000000000000000000000000000000000000000000000006020808301919091523060601b7fffffffffffffffffffffffffffffffffffffffff0000000000000000000000001660218301526035820194909452605580820193909352815180820390930183526075019052805191012090565b6040517fd69400000000000000000000000000000000000000000000000000000000000060208201527fffffffffffffffffffffffffffffffffffffffff000000000000000000000000606083901b1660228201527f01000000000000000000000000000000000000000000000000000000000000006036820152909150603701604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe081840301815291905280516020909101209392505050565b60006f67363d3d37363d34f03d5260086018f3600052836010806000f5806108c45763301164256000526004601cfd5b8060145261d69460005260016034536017601e20915060008085516020870186855af16108f9576319b991a86000526004601cfd5b50803b61066e576319b991a86000526004601cfd5b60006020828403121561092057600080fd5b5035919050565b60008060006040848603121561093c57600080fd5b83359250602084013567ffffffffffffffff8082111561095b57600080fd5b818601915086601f83011261096f57600080fd5b81358181111561097e57600080fd5b87602082850101111561099057600080fd5b6020830194508093505050509250925092565b6000602082840312156109b557600080fd5b813573ffffffffffffffffffffffffffffffffffffffff8116811461066e57600080fd5b600080604083850312156109ec57600080fd5b50508035926020909101359150565b6000825160005b81811015610a1c5760208186018101518583015201610a02565b506000920191825250919050565b818382376000910190815291905056fea26469706673582212206a88590464916b871d825761281f18e257d94eb64a38aca2ff3420bf7bb35f4264736f6c63430008130033").

