%% -*- mode: erlang -*-

{eunit_opts, [verbose, {skip_deps, true}]}.
{eunit_exclude_deps, true}.
{clean_files, ["test/*.beam", ".eunit/*"]}.
{cover_enabled, true}.
{eunit_opts, [verbose]}.
{minimum_otp_vsn, "24.0"}.

{plugins, [
%           rebar3_elvis_plugin
%           {rebar3_xref, {git, "https://github.com/shopgun/rebar3_xref.git", {branch, "master"}}}
]}.

{dialyzer, [
            %{warnings, [warning()]},
            {get_warnings, true},
            %{plt_apps, top_level_deps | all_deps} % default: top_level_deps
            %{plt_extra_apps, [atom()]},
            %{plt_location, local | file:filename()},
            %{plt_prefix, string()},
            %{base_plt_location, global | file:filename()},
            %{base_plt_prefix, string()},
            {base_plt_apps, [tpic2]}
           ]}.

{erl_opts, [
]}.




{deps, [
        {jsx, {git, "https://github.com/cleverfox/jsx.git", "develop"}},
        {base64url, {git, "https://github.com/dvv/base64url.git", "master"}},
        {cowboy, "2.9.0"},
        {gun, "1.3.3"},
        {rockstable, {git, "https://github.com/cleverfox/rockstable", {branch, "master"}}},
        {db_merkle_trees, {git, "https://github.com/cleverfox/db_merkle_trees.git", {branch, "master"}}},
        {tinymq,  {git, "https://github.com/ChicagoBoss/tinymq", "0e47ab2ffb90d41885258e8940c3c8de9ba40637"}},
        {gb_merkle_trees, {git, "https://github.com/KrzysiekJ/gb_merkle_trees.git", 
                           {ref, "8ca2b71bcd87777eb10f25119a393ba7b4b3c219"}}},
        {msgpack, {git, "https://github.com/cleverfox/msgpack-erlang", {branch, "master"}}},
        {cowdb,   {git, "https://github.com/refuge/cowdb.git", "40d72119a59407c7dddc140443b518a90338e347"}},
        {mkmap,   {git, "https://github.com/cleverfox/mkmap.git", {branch, "master"}}},
        {tables,  {git, "https://github.com/cleverfox/tables", {branch, "master"}}},
        {wanode,  {git, "https://github.com/thepower/wanode.git", {branch, "master"}}},
        {certifi, {git, "https://github.com/certifi/erlang-certifi.git", {branch, "master"}}},

        {meck,    {git, "https://github.com/eproxus/meck.git", {branch, "master"}}},
        {tpapi,   {git, "https://github.com/thepower/tpapi", {branch, "master"}}},
        {stout,   {git, "https://github.com/cleverfox/stout.git", {branch, "master"}}},
        {eevm,    {git, "https://github.com/thepower/eevm.git", {branch, "master"}}},
        {tpecdsa, {git, "https://github.com/thepower/tpecdsa", {branch, "master"}}}

]}.

{sub_dirs, ["apps/tpnode"]}.

{pre_hooks, [
  {compile, "escript ./bin/generate_headers"}
]}.

{overrides, [
  {add, stout, [
    {pre_hooks, [
        {compile, "escript ./src/stout_genhdr.erl"}
    ]}
  ]}
]}.


{relx, [
        {release, { thepower, "0.14.5" }, [tpnode,
                                           sasl,
                                           runtime_tools
                                          ]},
        {sys_config, "./config/sys.config"},
        {vm_args, "./config/vm.args"},

        {dev_mode, false},
        {include_erts, true},
        {system_libs,true},
        {include_src, false},
        {exclude_modules, [
                           {tpnode, [scratchpad]}
                          ]},

        {extended_start_script_extensions, [
                                            {deploy_chain, "extensions/deploy_chain"},
                                            {join_chain, "extensions/join_chain"}
                                           ]},
        {extended_start_script, true}
       ]
}.


{elvis,
 [
  #{
   dirs => ["apps/tpnode/src"],
   filter => "*.erl",
   %ruleset => erl_files,
   rules => [
             {elvis_style, line_length, #{limit => 100}},
             {elvis_style, no_trailing_whitespace}
             , { elvis_style
                 , operator_spaces
                 , #{rules => [{right, ","}, {right, "++"}, {left, "++"}]}
               }
             , {elvis_style, macro_names}
             , {elvis_style, macro_module_names}
             , {elvis_style, nesting_level, #{level => 5}}
             , {elvis_style, god_modules, #{limit => 25}}
             , {elvis_style, invalid_dynamic_call, #{ignore => [elvis]}}
             , {elvis_style, no_behavior_info}
             , { elvis_style
                 , module_naming_convention
                 , #{regex => "^([a-z][a-z0-9]*_?)*(_SUITE)?$", ignore => []}
               }
             , { elvis_style
                 , function_naming_convention
                 , #{regex => "^([a-z][a-z0-9]*_?)*$"}
               }
             , {elvis_style, state_record_and_type}
             , {elvis_style, no_spec_with_records}
             , {elvis_style, dont_repeat_yourself, #{min_complexity => 10}}
             , {elvis_style, no_debug_call, #{ignore => [elvis, elvis_utils]}}

            ]
  }
 ]
}.

{profiles, [
    {test, [
%%        {deps, [
%%          {meck, ".*", {git, "git://github.com/eproxus/meck.git"}},
%%          {tpapi, {git, "https://github.com/thepower/tpapi.git", {branch, "master"}}}
%%        ]},
        {dist_node, [ {sname, ctnode} ]},
        {erl_opts, [
            debug_info, no_fail_on_warning, no_warnings_as_errors
        ]}
    ]},

    {erun, [
            {dist_node, [ {sname, erun} ]},
            {shell, [
                     {config, "examples/erun.config"},
                     {apps, [erun]}
                    ]}
              ]},

    {rel, [
           {overrides, 
            [ {override, 
               [ {erl_opts, 
                  [ 
                   no_debug_info,
                   no_fail_on_warning, 
                   no_warnings_as_errors 
                  ] 
                 } ]
              } ]
           },
           {relx, [{dev_mode, false}, {include_erts, true}]}
          ]},
    {nodeb1, [
        {dist_node, [ {sname, b1} ]},
        {shell, [ {config, "b1.config"} ]}
    ]},
    {nodeb2, [
        {dist_node, [ {sname, b2} ]},
        {shell, [ {config, "b2.config"} ]}
    ]},
    {nodeb3, [
        {dist_node, [ {sname, b3} ]},
        {shell, [ {config, "b3.config"} ]}
    ]},
    {nodeb4, [
        {dist_node, [ {sname, b4} ]},
        {shell, [ {config, "b4.config"} ]}
    ]},
    {c4n1, [
        {dist_node, [ {sname, c4n1} ]},
        {shell, [ {config, "examples/test_chain4/test_c4n1.config"} ]}
    ]},
    {c4n2, [
        {dist_node, [ {sname, c4n2} ]},
        {shell, [ {config, "examples/test_chain4/test_c4n2.config"} ]}
    ]},
    {c4n3, [
        {dist_node, [ {sname, c4n3} ]},
        {shell, [ {config, "examples/test_chain4/test_c4n3.config"} ]}
    ]}
    ]
}.

%% Code coverage
{cover_enabled, false}.
%%{cover_export_enabled, true}.
%%%%{cover_opts, [verbose]}.
%%{cover_opts, [details]}.


%% Coveralls code coverage reporting
{coveralls_coverdata, "_build/test/cover/ct.coverdata"}.
{coveralls_service_name, "travis-ci"}.
{do_coveralls_after_ct, false}.
{do_coveralls_after_eunit, false}.

%% Common Test options
{ct_opts, [
    {logdir, "_build/test/logs"},
    {dir, "test"},
    {cover, "test/tpnode.coverspec"},
    {suite, [
        basic_SUITE,
        evm_SUITE
    ]}
]}.

%% XRef
{xref_warnings, true}.
{xref_extra_paths, []}.
{xref_checks, [
               undefined_function_calls,
%               export_not_used,
               undefined_functions,
               locals_not_used,
               deprecated_function_calls,
               deprecated_functions
              ]}.

